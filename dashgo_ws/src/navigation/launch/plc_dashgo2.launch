<?xml version="1.0"?>
<launch>
    <!-- Map server initialization, outside namespaces -->
  <node name="map_server" pkg="map_server" type="map_server"
        args="$(find contextualizer)/maps/factory.yaml">
        <param name="frame_id" value="/map"/>
  </node>
    <include file="nav.launch">
      <arg name="ns" value="" />
      <arg name="initial_pose_x" value="0.591092" />
      <arg name="initial_pose_y" value="4.537635" />
    </include>
    <include file="move_base.launch">
      <arg name="ns" value="" />
    </include>
  <include file="$(find dashgo_description)/launch/dashgo_description.launch"/>
  <node pkg="goal_provider" name="dashgogoal" type="goaldashgo2.py" output="screen">
  </node>
  <!-- Start RVIZ simulator -->
  <!-- <node name="rviz" pkg="rviz" type="rviz" args="-d $(find config_files)/rviz/plc_dashgo2.rviz"/> -->
  <include file="$(find dashgo_driver)/launch/driver_imu.launch"/>
  <include file="$(find ydlidar)/launch/ydlidar1_up.launch"/>
  <node name="robot_pose_publisher" pkg="robot_pose_publisher" type="robot_pose_publisher" />
  <node pkg="laser_filters" type="scan_to_scan_filter_chain" output="screen" name="laser_filter">
      <rosparam command="load" file="$(find dashgo_tools)/conf/box_filter.yaml" />
  </node> 
  <node name="robot_data" pkg="dashgo_tools" type="robot_data.py" respawn="true" /> 
  <node name="get_scan_data" pkg="dashgo_tools" type="get_scan_data.py" respawn="true" />
  

</launch>
